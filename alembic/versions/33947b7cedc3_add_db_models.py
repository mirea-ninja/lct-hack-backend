"""add db models

Revision ID: 33947b7cedc3
Revises: cab84b0ee0df
Create Date: 2022-10-30 20:39:03.392737

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '33947b7cedc3'
down_revision = 'cab84b0ee0df'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adjustment',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('trade', sa.Integer(), nullable=False),
    sa.Column('price_trade', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('price_floor', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('price_area', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('price_kitchen_area', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('price_balcony', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('price_metro', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('price_final', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('floor', sa.Enum((0, -310, 320, -400, 420, -700, 750)), nullable=False),
    sa.Column('apt_area', sa.Enum((-2200, -1700, -1200, -1100, -700, -600, 0, 300, 600, 700, 900, 1300, 1400, 1600, 2100, 2400, 2800, 3100)), nullable=False),
    sa.Column('kitchen_area', sa.Enum((-830, -550, -290, 300, 580, 900)), nullable=False),
    sa.Column('has_balcony', sa.Enum((-500, 0, 530)), nullable=False),
    sa.Column('distance_to_metro', sa.Enum((-2200, -1900, -1700, -1500, -1300, -1100, -1000, -900, -800, -700, -600, -500, -400, 0, 400, 500, 600, 700, 900, 1000, 1100, 1200, 1500, 1700, 2000, 2400, 2900)), nullable=False),
    sa.Column('quality', sa.Enum((-20100, -13400, -6700, 0, 6700, 13400, 20100)), nullable=False),
    sa.Column('query_guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['query_guid'], ['query.guid'], ),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_adjustment_guid'), 'adjustment', ['guid'], unique=True)
    op.create_table('priced_apartment',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('m2price', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('apartment_guid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['apartment_guid'], ['apartment.guid'], ),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_priced_apartment_guid'), 'priced_apartment', ['guid'], unique=True)
    op.add_column('apartment', sa.Column('apartment_area', sa.Integer(), nullable=False))
    op.drop_column('apartment', 'lon')
    op.drop_column('apartment', 'apt_area')
    op.drop_column('apartment', 'lat')
    op.add_column('archive', sa.Column('query_guid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_foreign_key(None, 'archive', 'query', ['query_guid'], ['guid'])
    op.drop_column('archive', 'updated_at')
    op.drop_column('archive', 'created_by')
    op.drop_column('archive', 'output_file')
    op.drop_column('archive', 'created_at')
    op.drop_column('archive', 'input_file')
    op.add_column('query', sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=False))
    op.add_column('query', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('query', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('query', sa.Column('input_file', sa.String(), nullable=False))
    op.add_column('query', sa.Column('output_file', sa.String(), nullable=False))
    op.drop_constraint('query_archive_guid_fkey', 'query', type_='foreignkey')
    op.drop_column('query', 'archive_guid')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('query', sa.Column('archive_guid', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('query_archive_guid_fkey', 'query', 'archive', ['archive_guid'], ['guid'])
    op.drop_column('query', 'output_file')
    op.drop_column('query', 'input_file')
    op.drop_column('query', 'updated_at')
    op.drop_column('query', 'created_at')
    op.drop_column('query', 'created_by')
    op.add_column('archive', sa.Column('input_file', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('archive', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('archive', sa.Column('output_file', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('archive', sa.Column('created_by', postgresql.UUID(), autoincrement=False, nullable=False))
    op.add_column('archive', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'archive', type_='foreignkey')
    op.drop_column('archive', 'query_guid')
    op.add_column('apartment', sa.Column('lat', sa.NUMERIC(), autoincrement=False, nullable=False))
    op.add_column('apartment', sa.Column('apt_area', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('apartment', sa.Column('lon', sa.NUMERIC(), autoincrement=False, nullable=False))
    op.drop_column('apartment', 'apartment_area')
    op.drop_index(op.f('ix_priced_apartment_guid'), table_name='priced_apartment')
    op.drop_table('priced_apartment')
    op.drop_index(op.f('ix_adjustment_guid'), table_name='adjustment')
    op.drop_table('adjustment')
    # ### end Alembic commands ###
