"""rebuild migrations

Revision ID: 86567c806fa2
Revises: 
Create Date: 2022-11-01 20:00:27.138980

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '86567c806fa2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adjustment',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('trade', sa.Integer(), nullable=False),
    sa.Column('price_trade', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('floor', sa.Enum('FLOOR_MINUS_310', 'FLOOR_0', 'FLOOR_320', 'FLOOR_MINUS_400', 'FLOOR_420', 'FLOOR_MINUS_700', 'FLOOR_750', name='floor'), nullable=False),
    sa.Column('price_floor', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('apt_area', sa.Enum('APT_AREA_MINUS_2200', 'APT_AREA_MINUS_1700', 'APT_AREA_MINUS_1200', 'APT_AREA_MINUS_1100', 'APT_AREA_MINUS_700', 'APT_AREA_MINUS_600', 'APT_AREA_0', 'APT_AREA_300', 'APT_AREA_600', 'APT_AREA_700', 'APT_AREA_900', 'APT_AREA_1300', 'APT_AREA_1400', 'APT_AREA_1600', 'APT_AREA_2100', 'APT_AREA_2400', 'APT_AREA_2800', 'APT_AREA_3100', name='aptarea'), nullable=False),
    sa.Column('price_area', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('kitchen_area', sa.Enum('KITCHEN_AREA_MINUS_830', 'KITCHEN_AREA_MINUS_550', 'KITCHEN_AREA_MINUS_290', 'KITCHEN_AREA_300', 'KITCHEN_AREA_580', 'KITCHEN_AREA_900', name='kitchenarea'), nullable=False),
    sa.Column('price_kitchen', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('has_balcony', sa.Enum('HAS_BALCONY_MINUS_500', 'HAS_BALCONY_0', 'HAS_BALCONY_530', name='hasbalcony'), nullable=False),
    sa.Column('price_balcony', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('distance_to_metro', sa.Enum('DISTANCE_TO_METRO_MINUS_2200', 'DISTANCE_TO_METRO_MINUS_1900', 'DISTANCE_TO_METRO_MINUS_1700', 'DISTANCE_TO_METRO_MINUS_1500', 'DISTANCE_TO_METRO_MINUS_1300', 'DISTANCE_TO_METRO_MINUS_1100', 'DISTANCE_TO_METRO_MINUS_1000', 'DISTANCE_TO_METRO_MINUS_900', 'DISTANCE_TO_METRO_MINUS_800', 'DISTANCE_TO_METRO_MINUS_700', 'DISTANCE_TO_METRO_MINUS_600', 'DISTANCE_TO_METRO_MINUS_500', 'DISTANCE_TO_METRO_MINUS_400', 'DISTANCE_TO_METRO_0', 'DISTANCE_TO_METRO_400', 'DISTANCE_TO_METRO_500', 'DISTANCE_TO_METRO_600', 'DISTANCE_TO_METRO_700', 'DISTANCE_TO_METRO_900', 'DISTANCE_TO_METRO_1000', 'DISTANCE_TO_METRO_1100', 'DISTANCE_TO_METRO_1200', 'DISTANCE_TO_METRO_1500', 'DISTANCE_TO_METRO_1700', 'DISTANCE_TO_METRO_2000', 'DISTANCE_TO_METRO_2400', 'DISTANCE_TO_METRO_2900', name='distancetometro'), nullable=False),
    sa.Column('price_metro', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('quality', sa.Enum('NO_FINISH', 'ECONOM', 'IMPROVED', name='quality'), nullable=False),
    sa.Column('price_final', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_adjustment_guid'), 'adjustment', ['guid'], unique=True)
    op.create_table('apartment',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('lat', sa.Numeric(), nullable=False),
    sa.Column('lon', sa.Numeric(), nullable=False),
    sa.Column('rooms', sa.Integer(), nullable=False),
    sa.Column('segment', sa.Enum('NEW', 'MODERN', 'OLD', name='segment'), nullable=False),
    sa.Column('floors', sa.Integer(), nullable=False),
    sa.Column('walls', sa.Enum('BRICK', 'PANEL', 'MONOLITH', name='walls'), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('apartment_area', sa.Integer(), nullable=False),
    sa.Column('kitchen_area', sa.Integer(), nullable=False),
    sa.Column('has_balcony', sa.Boolean(), nullable=False),
    sa.Column('distance_to_metro', sa.Integer(), nullable=False),
    sa.Column('quality', sa.Enum('NO_FINISH', 'ECONOM', 'IMPROVED', name='quality'), nullable=False),
    sa.Column('m2price', sa.Numeric(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_apartment_guid'), 'apartment', ['guid'], unique=True)
    op.create_table('manual_adjustment',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('trade', sa.Integer(), nullable=False),
    sa.Column('price_trade', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('price_floor', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('apt_area', sa.Integer(), nullable=False),
    sa.Column('price_area', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('kitchen_area', sa.Integer(), nullable=False),
    sa.Column('price_kitchen', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('has_balcony', sa.Integer(), nullable=False),
    sa.Column('price_balcony', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('distance_to_metro', sa.Integer(), nullable=False),
    sa.Column('price_metro', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.Column('quality', sa.Integer(), nullable=False),
    sa.Column('price_final', sa.Numeric(precision=7, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_manual_adjustment_guid'), 'manual_adjustment', ['guid'], unique=True)
    op.create_table('query',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('input_file', sa.String(), nullable=False),
    sa.Column('output_file', sa.String(), nullable=False),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('updated_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_query_guid'), 'query', ['guid'], unique=True)
    op.create_table('user',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('guid'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_user_guid'), 'user', ['guid'], unique=True)
    op.create_table('sub_query',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('query_guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['query_guid'], ['query.guid'], ),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_sub_query_guid'), 'sub_query', ['guid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sub_query_guid'), table_name='sub_query')
    op.drop_table('sub_query')
    op.drop_index(op.f('ix_user_guid'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_query_guid'), table_name='query')
    op.drop_table('query')
    op.drop_index(op.f('ix_manual_adjustment_guid'), table_name='manual_adjustment')
    op.drop_table('manual_adjustment')
    op.drop_index(op.f('ix_apartment_guid'), table_name='apartment')
    op.drop_table('apartment')
    op.drop_index(op.f('ix_adjustment_guid'), table_name='adjustment')
    op.drop_table('adjustment')
    # ### end Alembic commands ###
