version: "3.9"
services:
  swagger:
    image: swaggerapi/swagger-ui:latest
    ports:
      - "80:8080"
    environment:
      URL: 'swagger.yml'
    volumes:
      - ./swagger/swagger.yml:/usr/share/nginx/html/swagger.yml
    labels:
      swaggerLabel: LCT Hack Backend
      swaggerGroup: lst-hack
      swaggerPort: 8081

  db:
    image: postgres:latest
    volumes:
      - lct-hack-db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  broker:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${BROKER_USER}
      RABBITMQ_DEFAULT_PASS: ${BROKER_PASS}
    volumes:
      - broker:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - default
    healthcheck:
      test: rabbitmq-diagnostics check_running
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    environment:
      - BROKER_URL=${BROKER_URL}
      - LOG_LEVEL=TRACE
      - C_FORCE_ROOT=true
    depends_on:
      broker:
        condition: service_healthy
    networks:
      - default

  backend:
    build: .
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    ports:
      - ${BACKEND_PORT}80:${BACKEND_PORT}
    environment:
      DEBUG: ${DEBUG}

      BACKEND_TTILE: ${BACKEND_TTILE}
      BACKEND_DESCRIPTION: ${BACKEND_DESCRIPTION}
      BACKEND_PREFIX: ${BACKEND_PREFIX}

      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_RELOAD: ${BACKEND_RELOAD}

      BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}

      BACKEND_JWT_SECRET: ${BACKEND_JWT_SECRET}
      BACKEND_JWT_ALGORITHM: ${BACKEND_JWT_ALGORITHM}
      BACKEND_JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${BACKEND_JWT_ACCESS_TOKEN_EXPIRE_MINUTES}

      BACKEND_DADATA_TOKEN: ${BACKEND_DADATA_TOKEN}

      BACKEND_DISABLE_AUTH: ${BACKEND_DISABLE_AUTH}
      BACKEND_DISABLE_FILE_SENDING: ${BACKEND_DISABLE_FILE_SENDING}

      BROKER_HOST: ${BROKER_HOST}
      BROKER_PORT: ${BROKER_PORT}
      BROKER_USER: ${BROKER_USER}
      BROKER_PASS: ${BROKER_PASS}
      BROKER_URL: ${BROKER_URL}

      STORAGE_REGION: ${STORAGE_REGION}
      STORAGE_ENDPOINT: ${STORAGE_ENDPOINT}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      STORAGE_ACCESS_KEY_ID: ${STORAGE_ACCESS_KEY_ID}
      STORAGE_BUCKET_NAME: ${STORAGE_BUCKET_NAME}
      STORAGE_FOLDER_NAME: ${STORAGE_FOLDER_NAME}

      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

      ENV: development
    networks:
      - default

volumes:
  lct-hack-db-data:
  broker: